{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/screens/DatePicker.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimatedLoader from 'react-native-animated-loader';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport DateC from \"../screens/dateClassifier\";\nimport MatchList from \"../shared/matchlist\";\n\nvar DatePicker = function DatePicker(_ref) {\n  var navigation = _ref.navigation;\n  React.useEffect(function () {\n    var unsubscribe = navigation.addListener('tabPress', function (e) {\n      console.log('Pressed Again!');\n      showDatePicker();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    console.log(\"A date has been picked: \", date);\n    var d = moment(date).format('YYYY-MM-DD');\n    checkDate = d;\n    console.log(checkDate);\n    hideDatePicker();\n    loadFTData();\n  };\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isplan = _useState4[0],\n      setIsPlan = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isloaded = _useState6[0],\n      setIsLoaded = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      FTdata = _useState8[0],\n      setFTData = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errors = _useState10[0],\n      setError = _useState10[1];\n\n  var checkDate = DateC('Today', 0).CheckDate;\n  var liveStatus = '0';\n  var APIkey = \"b7d8284d8678b42387a1f9efad388afb5d9683aa2204c433d9b8638841a91f8a\";\n  var baseURL = \"https://apiv2.apifootball.com/?action=get_events&APIkey=\" + APIkey;\n  var url = '';\n\n  var seturl = function seturl() {\n    if (liveStatus == '0') {\n      url = baseURL + \"&from=\" + checkDate + \"&to=\" + checkDate;\n    } else {\n      url = baseURL + \"&from=\" + checkDate + \"&to=\" + checkDate + \"&match_live=1\";\n    }\n  };\n\n  function loadFTData() {\n    var req;\n    return _regeneratorRuntime.async(function loadFTData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoaded(false);\n            seturl();\n            req = new Request(url, {\n              method: 'GET'\n            });\n            console.log(url);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(req).then(function (response) {\n              return response.json();\n            }).then(showData).catch(handleError));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var showData = function showData(data) {\n    setIsLoaded(true);\n    setError(null);\n    console.log(data);\n\n    if (data.error == 404) {\n      setIsPlan(data.message);\n    } else {\n      setIsPlan(null);\n      data.sort(GetSortOrder(\"league_name\"));\n      setFTData(data);\n    }\n  };\n\n  var GetSortOrder = function GetSortOrder(prop) {\n    return function (a, b) {\n      if (a[prop] > b[prop]) {\n        return 1;\n      } else if (a[prop] < b[prop]) {\n        return -1;\n      }\n\n      return 0;\n    };\n  };\n\n  var handleError = function handleError(err) {\n    setIsLoaded(true);\n    setError(err.message);\n    console.log(errors);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"date\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, !isloaded && React.createElement(AnimatedLoader, {\n    visible: !isloaded,\n    overlayColor: \"rgba(255,255,255,0.75)\",\n    animationStyle: styles.lottie,\n    speed: 1,\n    source: require(\"../Components/lf30_editor_ROJ9dc.json\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }), errors && React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }\n  }, errors), isplan && React.createElement(Text, {\n    style: {\n      marginTop: 40,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }\n  }, isplan), FTdata && FTdata.length > 0 && React.createElement(MatchList, {\n    Matches: FTdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  })));\n};\n\nexport default DatePicker;\nvar styles = StyleSheet.create({\n  lottie: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/screens/DatePicker.js"],"names":["React","useState","AnimatedLoader","DateTimePickerModal","moment","DateC","MatchList","DatePicker","navigation","useEffect","unsubscribe","addListener","e","console","log","showDatePicker","isDatePickerVisible","setDatePickerVisibility","hideDatePicker","handleConfirm","date","d","format","checkDate","loadFTData","isplan","setIsPlan","isloaded","setIsLoaded","FTdata","setFTData","errors","setError","CheckDate","liveStatus","APIkey","baseURL","url","seturl","req","Request","method","fetch","then","response","json","showData","catch","handleError","data","error","message","sort","GetSortOrder","prop","a","b","err","styles","lottie","require","marginTop","alignItems","length","StyleSheet","create","width","height"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { StyleSheet, Text,Button, View } from 'react-native';\nimport AnimatedLoader from 'react-native-animated-loader';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport DateC from '../screens/dateClassifier';\nimport MatchList from '../shared/matchlist';\nconst DatePicker = ({navigation}) => {\n    React.useEffect(() => {\n        const unsubscribe = navigation.addListener('tabPress', e => {\n        console.log('Pressed Again!');  \n        showDatePicker();\n    \n        });\n    \n        return unsubscribe;\n      }, [navigation]);\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n   \n\n    const showDatePicker = () => {\n      setDatePickerVisibility(true);\n    };\n  \n    const hideDatePicker = () => {\n      setDatePickerVisibility(false);\n    };\n  \n    const handleConfirm = date => {\n      console.log(\"A date has been picked: \", date);\n      let d=moment(date).format('YYYY-MM-DD');\n     checkDate=d;\n  console.log(checkDate);\n     hideDatePicker();\n     loadFTData();\n    };\n      \n     const[isplan,setIsPlan]=useState(null);\n     const[isloaded,setIsLoaded]=useState(true);\n    const[FTdata,setFTData]=useState(null);\n    const[errors,setError]=useState(null);\n     let checkDate=DateC('Today',0).CheckDate;\n    let liveStatus='0';\n   \n   const APIkey=\"b7d8284d8678b42387a1f9efad388afb5d9683aa2204c433d9b8638841a91f8a\";\n   const baseURL=\"https://apiv2.apifootball.com/?action=get_events&APIkey=\"+APIkey;\n   let url='';\n   const seturl=()=>{\n   \n    if(liveStatus=='0')\n    {url=baseURL+\"&from=\"+checkDate+\"&to=\"+checkDate;}\n    else{\n        url=baseURL+\"&from=\"+checkDate+\"&to=\"+checkDate+\"&match_live=1\";\n    }\n   }\n   \n  async function loadFTData (){\n      setIsLoaded(false);\n seturl();\n      let req=new Request(\n     url,{\n         method:'GET'\n     });\n console.log(url);\n await fetch(req)\n .then(response=>response.json())\n .then(showData)\n .catch(handleError)\n }\n const showData=(data)=>{\n     setIsLoaded(true);\n     setError(null);\n     console.log(data);\n     if(data.error==404){setIsPlan(data.message);}\n     else{\n         setIsPlan(null);\n         data.sort(GetSortOrder(\"league_name\"));\n         setFTData(data);\n     }\n     }\n \n     const GetSortOrder=(prop)=> {  \n         return function(a, b) {  \n             if (a[prop] > b[prop]) {  \n                 return 1;  \n             } else if (a[prop] < b[prop]) {  \n                 return -1;  \n             }  \n             return 0;  \n         }  \n     }  \n const handleError=(err)=>{\n     setIsLoaded(true);\n setError(err.message);\n console.log(errors);\n }\n\n     \n    return (\n      <View>\n        <DateTimePickerModal\n          isVisible={isDatePickerVisible}\n          mode=\"date\"\n          onConfirm={handleConfirm}\n          onCancel={hideDatePicker}\n        />\n     <View>\n     {!isloaded&&(<AnimatedLoader  \n     visible={!isloaded}     \n          overlayColor=\"rgba(255,255,255,0.75)\"   \n                 animationStyle={styles.lottie}     \n                      speed={1}\n                      source={require(\"../Components/lf30_editor_ROJ9dc.json\")} />  )}\n     {errors&&(<Text style={{marginTop:40,alignItems:'center'}}>{errors}</Text>)}\n     {isplan&&(<Text style={{marginTop:40,alignItems:'center'}}>{isplan}</Text>)}\n     {FTdata&&FTdata.length>0&&(<MatchList Matches={FTdata}/>)}\n     </View>\n      </View>\n    );\n  };\n  \n  export default DatePicker;\n  const styles=StyleSheet.create({\n    lottie: {    width: 100,    height: 100,  }\n});"]},"metadata":{},"sourceType":"module"}