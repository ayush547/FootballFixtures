{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/BottomNavigation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport color from 'color';\nimport Icon from \"./Icon\";\nimport Paper from \"./Paper\";\nimport Text from \"./Typography/Text\";\nimport { black, grey900, white } from \"../styles/colors\";\nimport withTheme from \"../core/withTheme\";\nvar AnimatedText = Animated.createAnimatedComponent(Text);\nvar AnimatedPaper = Animated.createAnimatedComponent(Paper);\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_SHIFT_AMOUNT = 10;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar ACTIVE_LABEL_SIZE = 14;\nvar INACTIVE_LABEL_SIZE = 12;\n\nvar calculateShift = function calculateShift(activeIndex, currentIndex, numberOfItems) {\n  if (activeIndex < currentIndex) {\n    return 2 * MIN_SHIFT_AMOUNT;\n  }\n\n  if (activeIndex > currentIndex) {\n    return -2 * MIN_SHIFT_AMOUNT;\n  }\n\n  if (activeIndex === currentIndex) {\n    if (currentIndex === 0) {\n      return MIN_SHIFT_AMOUNT;\n    }\n\n    if (currentIndex === numberOfItems - 1) {\n      return -MIN_SHIFT_AMOUNT;\n    }\n  }\n\n  return 0;\n};\n\nvar BottomNavigation = function (_React$Component) {\n  _inherits(BottomNavigation, _React$Component);\n\n  var _super = _createSuper(BottomNavigation);\n\n  _createClass(BottomNavigation, null, [{\n    key: \"SceneMap\",\n    value: function SceneMap(scenes) {\n      var SceneComponent = function (_React$PureComponent) {\n        _inherits(SceneComponent, _React$PureComponent);\n\n        var _super2 = _createSuper(SceneComponent);\n\n        function SceneComponent() {\n          _classCallCheck(this, SceneComponent);\n\n          return _super2.apply(this, arguments);\n        }\n\n        _createClass(SceneComponent, [{\n          key: \"render\",\n          value: function render() {\n            return React.createElement(scenes[this.props.route.key], this.props);\n          }\n        }]);\n\n        return SceneComponent;\n      }(React.PureComponent);\n\n      return function (_ref) {\n        var route = _ref.route,\n            jumpTo = _ref.jumpTo;\n        return React.createElement(SceneComponent, {\n          key: route.key,\n          route: route,\n          jumpTo: jumpTo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 7\n          }\n        });\n      };\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$navigation = nextProps.navigationState,\n          index = _nextProps$navigation.index,\n          routes = _nextProps$navigation.routes;\n      var tabs = routes.map(function (_, i) {\n        return prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0);\n      });\n      var shifts = routes.map(function (_, i) {\n        return prevState.shifts[i] || new Animated.Value(calculateShift(index, i, routes.length));\n      });\n      var nextState = {\n        tabs: tabs,\n        shifts: shifts\n      };\n\n      if (index !== prevState.current) {\n        _extends(nextState, {\n          current: index,\n          previous: prevState.current,\n          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index])\n        });\n      }\n\n      return nextState;\n    }\n  }]);\n\n  function BottomNavigation(props) {\n    var _this;\n\n    _classCallCheck(this, BottomNavigation);\n\n    _this = _super.call(this, props);\n\n    _this._handleLayout = function (e) {\n      return _this.setState({\n        layout: {\n          height: e.nativeEvent.layout.height,\n          width: e.nativeEvent.layout.width,\n          measured: true\n        }\n      });\n    };\n\n    _this._handleTabPress = function (index) {\n      var navigationState = _this.props.navigationState;\n\n      _this.state.touch.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.timing(_this.state.touch, {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.in(Easing.sin),\n        useNativeDriver: true\n      }).start();\n\n      if (index !== navigationState.index) {\n        _this.props.onIndexChange(index);\n      }\n\n      if (_this.props.onTabPress) {\n        _this.props.onTabPress({\n          route: navigationState.routes[index]\n        });\n      }\n    };\n\n    _this._jumpTo = function (key) {\n      var index = _this.props.navigationState.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n\n      _this.props.onIndexChange(index);\n    };\n\n    var _index = _this.props.navigationState.index;\n    _this.state = {\n      tabs: [],\n      shifts: [],\n      index: new Animated.Value(_index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: {\n        height: 0,\n        width: 0,\n        measured: false\n      },\n      current: _index,\n      previous: 0,\n      loaded: [_index]\n    };\n    return _this;\n  }\n\n  _createClass(BottomNavigation, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.navigationState.index === this.props.navigationState.index) {\n        return;\n      }\n\n      var _this$props$navigatio = this.props.navigationState,\n          routes = _this$props$navigatio.routes,\n          index = _this$props$navigatio.index;\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n      Animated.parallel([Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: 400,\n        useNativeDriver: true\n      }), Animated.sequence([Animated.delay(this.props.shifting ? 100 : 0), Animated.parallel([].concat(_toConsumableArray(routes.map(function (_, i) {\n        return Animated.timing(_this2.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: _this2.props.shifting ? 200 : 150,\n          useNativeDriver: true\n        });\n      })), _toConsumableArray(routes.map(function (_, i) {\n        return Animated.timing(_this2.state.shifts[i], {\n          toValue: calculateShift(index, i, routes.length),\n          duration: 200,\n          easing: Easing.out(Easing.sin),\n          useNativeDriver: true\n        });\n      }))))])]).start(function () {\n        _this2.state.tabs.map(function (tab, i) {\n          return tab.setValue(i === index ? 1 : 0);\n        });\n\n        _this2.state.index.setValue(index);\n\n        _this2.state.ripple.setValue(MIN_RIPPLE_SCALE);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          navigationState = _this$props.navigationState,\n          renderScene = _this$props.renderScene,\n          renderIcon = _this$props.renderIcon,\n          renderLabel = _this$props.renderLabel,\n          _this$props$getLabelT = _this$props.getLabelText,\n          getLabelText = _this$props$getLabelT === void 0 ? function (_ref2) {\n        var route = _ref2.route;\n        return route.title;\n      } : _this$props$getLabelT,\n          _this$props$getColor = _this$props.getColor,\n          getColor = _this$props$getColor === void 0 ? function (_ref3) {\n        var route = _ref3.route;\n        return route.color;\n      } : _this$props$getColor,\n          barStyle = _this$props.barStyle,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      var _this$state = this.state,\n          layout = _this$state.layout,\n          loaded = _this$state.loaded;\n      var routes = navigationState.routes;\n      var colors = theme.colors;\n      var shifting = typeof this.props.shifting === 'boolean' ? this.props.shifting : routes.length > 3;\n\n      var _ref4 = StyleSheet.flatten(barStyle) || {},\n          _ref4$backgroundColor = _ref4.backgroundColor,\n          approxBackgroundColor = _ref4$backgroundColor === void 0 ? shifting ? colors.primary : theme.dark ? grey900 : white : _ref4$backgroundColor;\n\n      var backgroundColor = shifting ? this.state.index.interpolate({\n        inputRange: routes.map(function (_, i) {\n          return i;\n        }),\n        outputRange: routes.map(function (route) {\n          return getColor({\n            route: route\n          }) || approxBackgroundColor;\n        })\n      }) : approxBackgroundColor;\n      var isDark = !color(approxBackgroundColor).light();\n      var textColor = isDark ? white : black;\n      var activeColor = shifting ? textColor : colors.primary;\n      var inactiveColor = shifting ? textColor : color(textColor).alpha(0.5).rgb().string();\n      var touchColor = color(textColor).alpha(0.12).rgb().string();\n      var touchRippleSize = layout.width / routes.length;\n      var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n      var tabWidth = Math.min((layout.width - MIN_SHIFT_AMOUNT * 4) / routes.length, maxTabWidth);\n      return React.createElement(View, {\n        style: [styles.container, style],\n        onLayout: this._handleLayout,\n        pointerEvents: layout.measured ? 'auto' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.content, {\n          backgroundColor: colors.background\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }\n      }, routes.map(function (route, index) {\n        if (!loaded.includes(index)) {\n          return null;\n        }\n\n        var focused = _this3.state.tabs[index];\n        var opacity = focused;\n        var translateY = shifting ? focused.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [8, 8, 0]\n        }) : 0;\n        return React.createElement(Animated.View, {\n          key: route.key,\n          pointerEvents: navigationState.index === index ? 'auto' : 'none',\n          style: [StyleSheet.absoluteFill, {\n            opacity: opacity,\n            transform: [{\n              translateY: translateY\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }\n        }, renderScene({\n          route: route,\n          jumpTo: _this3._jumpTo\n        }));\n      })), React.createElement(AnimatedPaper, {\n        style: [styles.bar, barStyle, {\n          backgroundColor: backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 9\n        }\n      }, React.createElement(SafeAreaView, {\n        style: [styles.items, {\n          maxWidth: maxTabWidth * routes.length\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }\n      }, shifting ? React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.ripple, {\n          top: BAR_HEIGHT / 2 - layout.width / 8,\n          left: navigationState.index * tabWidth + tabWidth / 2 - layout.width / 8,\n          height: layout.width / 4,\n          width: layout.width / 4,\n          borderRadius: layout.width / 2,\n          backgroundColor: getColor({\n            route: routes[navigationState.index]\n          }),\n          transform: [{\n            translateX: this.state.shifts[navigationState.index]\n          }, {\n            scale: this.state.ripple.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, 8]\n            })\n          }],\n          opacity: this.state.ripple.interpolate({\n            inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n            outputRange: [0, 0, 1, 1]\n          })\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }\n      }) : null, React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.ripple, {\n          top: BAR_HEIGHT / 2 - touchRippleSize / 2,\n          left: navigationState.index * tabWidth + tabWidth / 2 - touchRippleSize / 2,\n          height: touchRippleSize,\n          width: touchRippleSize,\n          borderRadius: touchRippleSize / 2,\n          backgroundColor: touchColor,\n          transform: [{\n            translateX: shifting ? this.state.shifts[navigationState.index] : 0\n          }, {\n            scale: this.state.touch\n          }],\n          opacity: this.state.touch.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [0, 1, 0]\n          })\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }\n      }), routes.map(function (route, index) {\n        var shift = _this3.state.shifts[index];\n        var focused = _this3.state.tabs[index];\n        var scale = focused.interpolate({\n          inputRange: [0, 1],\n          outputRange: [shifting ? 0.5 : INACTIVE_LABEL_SIZE / ACTIVE_LABEL_SIZE, 1]\n        });\n        var translateY = focused.interpolate({\n          inputRange: [0, 1],\n          outputRange: [shifting ? 10 : 2, 0]\n        });\n        var translateX = shifting ? shift : 0;\n        var inactiveOpacity = focused.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0]\n        });\n        var activeIconOpacity = shifting ? focused.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.6, 1]\n        }) : focused;\n        var activeLabelOpacity = focused;\n        var inactiveIconOpacity = inactiveOpacity;\n        var inactiveLabelOpacity = inactiveOpacity;\n        return React.createElement(TouchableWithoutFeedback, {\n          key: route.key,\n          onPress: function onPress() {\n            return _this3._handleTabPress(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 17\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.item, {\n            transform: [{\n              translateX: translateX\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 19\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.iconContainer, {\n            transform: [{\n              translateY: translateY\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 21\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.iconWrapper, {\n            opacity: activeIconOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 23\n          }\n        }, renderIcon ? renderIcon({\n          route: route,\n          focused: true,\n          tintColor: activeColor\n        }) : React.createElement(Icon, {\n          style: styles.icon,\n          name: route.icon,\n          color: activeColor,\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 27\n          }\n        })), shifting ? null : React.createElement(Animated.View, {\n          style: [styles.iconWrapper, {\n            opacity: inactiveIconOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 25\n          }\n        }, renderIcon ? renderIcon({\n          route: route,\n          focused: false,\n          tintColor: inactiveColor\n        }) : React.createElement(Icon, {\n          style: styles.icon,\n          name: route.icon,\n          color: inactiveColor,\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 29\n          }\n        }))), React.createElement(Animated.View, {\n          style: [styles.labelContainer, {\n            transform: [{\n              scale: scale\n            }, {\n              translateY: translateY\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 21\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.labelWrapper, {\n            opacity: activeLabelOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 23\n          }\n        }, renderLabel ? renderLabel({\n          route: route,\n          focused: true,\n          tintColor: activeColor\n        }) : React.createElement(AnimatedText, {\n          style: [styles.label, {\n            color: activeColor\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 27\n          }\n        }, getLabelText({\n          route: route\n        }))), shifting ? null : React.createElement(Animated.View, {\n          style: [styles.labelWrapper, {\n            opacity: inactiveLabelOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 25\n          }\n        }, renderLabel ? renderLabel({\n          route: route,\n          focused: false,\n          tintColor: inactiveColor\n        }) : React.createElement(AnimatedText, {\n          style: [styles.label, {\n            color: inactiveColor\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 29\n          }\n        }, getLabelText({\n          route: route\n        }))))));\n      }))));\n    }\n  }]);\n\n  return BottomNavigation;\n}(React.Component);\n\npolyfill(BottomNavigation);\nexport default withTheme(BottomNavigation);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    elevation: 8,\n    overflow: 'hidden',\n    alignItems: 'center',\n    paddingHorizontal: MIN_SHIFT_AMOUNT * 2\n  },\n  items: {\n    flexDirection: 'row'\n  },\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  iconWrapper: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    alignItems: 'center'\n  }),\n  icon: {\n    backgroundColor: 'transparent'\n  },\n  labelContainer: {\n    height: 18,\n    marginTop: 2,\n    paddingBottom: 4\n  },\n  labelWrapper: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    fontSize: Platform.OS === 'ios' ? 13 : 14,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/BottomNavigation.js"],"names":["React","polyfill","color","Icon","Paper","Text","black","grey900","white","withTheme","AnimatedText","Animated","createAnimatedComponent","AnimatedPaper","MIN_RIPPLE_SCALE","MIN_SHIFT_AMOUNT","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","ACTIVE_LABEL_SIZE","INACTIVE_LABEL_SIZE","calculateShift","activeIndex","currentIndex","numberOfItems","BottomNavigation","scenes","SceneComponent","createElement","props","route","key","PureComponent","jumpTo","nextProps","prevState","navigationState","index","routes","tabs","map","_","i","Value","shifts","length","nextState","current","previous","loaded","includes","_handleLayout","e","setState","layout","height","nativeEvent","width","measured","_handleTabPress","state","touch","setValue","timing","toValue","duration","easing","Easing","in","sin","useNativeDriver","start","onIndexChange","onTabPress","_jumpTo","findIndex","ripple","prevProps","parallel","sequence","delay","shifting","out","tab","renderScene","renderIcon","renderLabel","getLabelText","title","getColor","barStyle","style","theme","colors","StyleSheet","flatten","backgroundColor","approxBackgroundColor","primary","dark","interpolate","inputRange","outputRange","isDark","light","textColor","activeColor","inactiveColor","alpha","rgb","string","touchColor","touchRippleSize","maxTabWidth","tabWidth","Math","min","styles","container","content","background","focused","opacity","translateY","absoluteFill","transform","bar","items","maxWidth","top","left","borderRadius","translateX","scale","shift","inactiveOpacity","activeIconOpacity","activeLabelOpacity","inactiveIconOpacity","inactiveLabelOpacity","item","iconContainer","iconWrapper","tintColor","icon","labelContainer","labelWrapper","label","Component","create","flex","elevation","overflow","alignItems","paddingHorizontal","flexDirection","paddingVertical","position","marginHorizontal","alignSelf","absoluteFillObject","marginTop","paddingBottom","fontSize","Platform","OS","textAlign"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  Easing,\n  TouchableWithoutFeedback,\n  SafeAreaView,\n  StyleSheet,\n  Platform,\n} from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport color from 'color';\nimport Icon from './Icon';\nimport Paper from './Paper';\nimport Text from './Typography/Text';\nimport { black, grey900, white } from '../styles/colors';\nimport withTheme from '../core/withTheme';\nimport type { Theme } from '../types';\nimport type { IconSource } from './Icon';\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\nconst AnimatedPaper = Animated.createAnimatedComponent(Paper);\n\ntype Route = $Shape<{\n  key: string,\n  title: string,\n  icon: IconSource,\n  color: string,\n}>;\n\ntype NavigationState<T: Route> = {\n  index: number,\n  routes: Array<T>,\n};\n\ntype Props<T> = {\n  /**\n   * Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label.\n   * By default, this is `true` when you have more than 3 tabs.\n   */\n  shifting?: boolean,\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number reprsenting the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState<T>,\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => mixed,\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: T,\n    jumpTo: (key: string) => mixed,\n  }) => ?React.Node,\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: T,\n    focused: boolean,\n    tintColor: string,\n  }) => React.Node,\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: T,\n    focused: boolean,\n    tintColor: string,\n  }) => React.Node,\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: T }) => string,\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: T }) => string,\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: T }) => mixed,\n  /**\n   * Style for the bottom navigation bar.\n   * You can set a bottom padding here if you have a translucent navigation bar on Android:\n   *\n   * ```js\n   * barStyle={{ paddingBottom: 48 }}\n   * ```\n   */\n  barStyle?: any,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\ntype State = {\n  /**\n   * Active state of individual tab items, active state is 1 and inactve state is 0.\n   */\n  tabs: Animated.Value[],\n  /**\n   * The amount of horizontal shift for each tab item.\n   */\n  shifts: Animated.Value[],\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * Use don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  index: Animated.Value,\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  ripple: Animated.Value,\n  /**\n   * Animation for the touch feedback, used to determine it's scale and opacity.\n   */\n  touch: Animated.Value,\n  /**\n   * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n   */\n  layout: { height: number, width: number, measured: boolean },\n  /**\n   * Currently active index. Used only for getDerivedStateFromProps.\n   */\n  current: number,\n  /**\n   * Previously active index. Used to determine the position of the ripple.\n   */\n  previous: number,\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  loaded: number[],\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_SHIFT_AMOUNT = 10;\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst ACTIVE_LABEL_SIZE = 14;\nconst INACTIVE_LABEL_SIZE = 12;\n\nconst calculateShift = (activeIndex, currentIndex, numberOfItems) => {\n  if (activeIndex < currentIndex) {\n    // If the new active tab comes before current tab, current tab will shift towards right\n    return 2 * MIN_SHIFT_AMOUNT;\n  }\n\n  if (activeIndex > currentIndex) {\n    // If the new active tab comes after current tab, current tab will shift towards left\n    return -2 * MIN_SHIFT_AMOUNT;\n  }\n\n  if (activeIndex === currentIndex) {\n    if (currentIndex === 0) {\n      // If the current tab is the new active tab and its the first tab, it'll shift towards right\n      return MIN_SHIFT_AMOUNT;\n    }\n\n    if (currentIndex === numberOfItems - 1) {\n      // If the current tab is the new active tab and its the last tab, it'll shift towards left\n      return -MIN_SHIFT_AMOUNT;\n    }\n  }\n\n  // If the current tab is the new active tab and its somewhere in the middle, it won't shift\n  return 0;\n};\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom tab bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-tabs](https://github.com/react-navigation/react-navigation-tabs).\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass BottomNavigation<T: *> extends React.Component<Props<T>, State> {\n  /**\n   * Pure components are used to minmize re-rendering of the pages.\n   * This drastically improves the animation performance.\n   */\n  static SceneMap(scenes: { [key: string]: Function }) {\n    /* eslint-disable react/no-multi-comp */\n    class SceneComponent extends React.PureComponent<*> {\n      render() {\n        return React.createElement(scenes[this.props.route.key], this.props);\n      }\n    }\n\n    return ({ route, jumpTo }: *) => (\n      <SceneComponent key={route.key} route={route} jumpTo={jumpTo} />\n    );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index, routes } = nextProps.navigationState;\n\n    // Re-create animated values if routes have been added/removed\n    // Preserve previous animated values if they exist, so we don't break animations\n    const tabs = routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0)\n    );\n    const shifts = routes.map(\n      (_, i) =>\n        prevState.shifts[i] ||\n        new Animated.Value(calculateShift(index, i, routes.length))\n    );\n\n    const nextState = {\n      tabs,\n      shifts,\n    };\n\n    if (index !== prevState.current) {\n      /* $FlowFixMe */\n      Object.assign(nextState, {\n        // Store the current index in state so that we can later check if the index has changed\n        current: index,\n        previous: prevState.current,\n        // Set the current tab to be loaded if it was not loaded before\n        loaded: prevState.loaded.includes(index)\n          ? prevState.loaded\n          : [...prevState.loaded, index],\n      });\n    }\n\n    return nextState;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { index } = this.props.navigationState;\n\n    this.state = {\n      tabs: [],\n      shifts: [],\n      index: new Animated.Value(index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: { height: 0, width: 0, measured: false },\n      current: index,\n      previous: 0,\n      loaded: [index],\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.navigationState.index === this.props.navigationState.index) {\n      return;\n    }\n\n    const { routes, index } = this.props.navigationState;\n\n    // Reset the ripple to avoid glitch if it's currently animating\n    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.parallel([\n      Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: 400,\n        useNativeDriver: true,\n      }),\n      Animated.sequence([\n        Animated.delay(this.props.shifting ? 100 : 0),\n        Animated.parallel([\n          ...routes.map((_, i) =>\n            Animated.timing(this.state.tabs[i], {\n              toValue: i === index ? 1 : 0,\n              duration: this.props.shifting ? 200 : 150,\n              useNativeDriver: true,\n            })\n          ),\n          ...routes.map((_, i) =>\n            Animated.timing(this.state.shifts[i], {\n              toValue: calculateShift(index, i, routes.length),\n              duration: 200,\n              easing: Easing.out(Easing.sin),\n              useNativeDriver: true,\n            })\n          ),\n        ]),\n      ]),\n    ]).start(() => {\n      // Workaround a bug in native animations where this is reset after first animation\n      this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's bacground color and then hide the ripple\n      this.state.index.setValue(index);\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n    });\n  }\n\n  _handleLayout = e =>\n    this.setState({\n      layout: {\n        height: e.nativeEvent.layout.height,\n        width: e.nativeEvent.layout.width,\n        measured: true,\n      },\n    });\n\n  _handleTabPress = (index: number) => {\n    const { navigationState } = this.props;\n\n    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.timing(this.state.touch, {\n      toValue: 1,\n      duration: 300,\n      easing: Easing.in(Easing.sin),\n      useNativeDriver: true,\n    }).start();\n\n    if (index !== navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n\n    if (this.props.onTabPress) {\n      this.props.onTabPress({\n        route: navigationState.routes[index],\n      });\n    }\n  };\n\n  _jumpTo = (key: string) => {\n    const index = this.props.navigationState.routes.findIndex(\n      route => route.key === key\n    );\n\n    this.props.onIndexChange(index);\n  };\n\n  render() {\n    const {\n      navigationState,\n      renderScene,\n      renderIcon,\n      renderLabel,\n      getLabelText = ({ route }: Object) => route.title,\n      getColor = ({ route }: Object) => route.color,\n      barStyle,\n      style,\n      theme,\n    } = this.props;\n    const { layout, loaded } = this.state;\n    const { routes } = navigationState;\n    const { colors } = theme;\n\n    const shifting =\n      typeof this.props.shifting === 'boolean'\n        ? this.props.shifting\n        : routes.length > 3;\n\n    const {\n      backgroundColor: approxBackgroundColor = shifting\n        ? colors.primary\n        : theme.dark\n          ? grey900\n          : white,\n    } =\n      StyleSheet.flatten(barStyle) || {};\n\n    const backgroundColor = shifting\n      ? this.state.index.interpolate({\n          inputRange: routes.map((_, i) => i),\n          outputRange: routes.map(\n            route => getColor({ route }) || approxBackgroundColor\n          ),\n        })\n      : approxBackgroundColor;\n\n    const isDark = !color(approxBackgroundColor).light();\n\n    const textColor = isDark ? white : black;\n    const activeColor = shifting ? textColor : colors.primary;\n    const inactiveColor = shifting\n      ? textColor\n      : color(textColor)\n          .alpha(0.5)\n          .rgb()\n          .string();\n\n    const touchColor = color(textColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const touchRippleSize = layout.width / routes.length;\n    const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n    const tabWidth = Math.min(\n      // Account for horizontal padding around the items\n      (layout.width - MIN_SHIFT_AMOUNT * 4) / routes.length,\n      maxTabWidth\n    );\n\n    return (\n      <View\n        style={[styles.container, style]}\n        onLayout={this._handleLayout}\n        pointerEvents={layout.measured ? 'auto' : 'none'}\n      >\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\n          {routes.map((route, index) => {\n            if (!loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const focused = this.state.tabs[index];\n            const opacity = focused;\n            const translateY = shifting\n              ? focused.interpolate({\n                  inputRange: [0, 0.5, 1],\n                  outputRange: [8, 8, 0],\n                })\n              : 0;\n\n            return (\n              <Animated.View\n                key={route.key}\n                pointerEvents={\n                  navigationState.index === index ? 'auto' : 'none'\n                }\n                style={[\n                  StyleSheet.absoluteFill,\n                  { opacity, transform: [{ translateY }] },\n                ]}\n              >\n                {renderScene({\n                  route,\n                  jumpTo: this._jumpTo,\n                })}\n              </Animated.View>\n            );\n          })}\n        </View>\n        <AnimatedPaper style={[styles.bar, barStyle, { backgroundColor }]}>\n          <SafeAreaView\n            style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the tab bar and from the left to the active tab.\n                    top: BAR_HEIGHT / 2 - layout.width / 8,\n                    left:\n                      navigationState.index * tabWidth +\n                      tabWidth / 2 -\n                      layout.width / 8,\n                    height: layout.width / 4,\n                    width: layout.width / 4,\n                    borderRadius: layout.width / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      { translateX: this.state.shifts[navigationState.index] },\n                      {\n                        // Scale to twice the size  to ensure it covers the whole tab bar\n                        scale: this.state.ripple.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: this.state.ripple.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            <Animated.View\n              pointerEvents=\"none\"\n              style={[\n                styles.ripple,\n                {\n                  // Set top and left values so that the ripple's center is same as the tab's center\n                  top: BAR_HEIGHT / 2 - touchRippleSize / 2,\n                  left:\n                    navigationState.index * tabWidth +\n                    tabWidth / 2 -\n                    touchRippleSize / 2,\n                  height: touchRippleSize,\n                  width: touchRippleSize,\n                  borderRadius: touchRippleSize / 2,\n                  backgroundColor: touchColor,\n                  transform: [\n                    {\n                      translateX: shifting\n                        ? this.state.shifts[navigationState.index]\n                        : 0,\n                    },\n                    { scale: this.state.touch },\n                  ],\n                  opacity: this.state.touch.interpolate({\n                    inputRange: [0, 0.5, 1],\n                    outputRange: [0, 1, 0],\n                  }),\n                },\n              ]}\n            />\n            {routes.map((route, index) => {\n              const shift = this.state.shifts[index];\n              const focused = this.state.tabs[index];\n\n              // Since we can't animate font size with native driver, calculate the scale to emulate it.\n              const scale = focused.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  shifting ? 0.5 : INACTIVE_LABEL_SIZE / ACTIVE_LABEL_SIZE,\n                  1,\n                ],\n              });\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = focused.interpolate({\n                inputRange: [0, 1],\n                outputRange: [shifting ? 10 : 2, 0],\n              });\n\n              // Amount of shifting for the shifting bottom navigation.\n              // This gives the illusion of the active tab getting bigger.\n              // We don't animate the width directly since we can't use native driver.\n              const translateX = shifting ? shift : 0;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const inactiveOpacity = focused.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n              const activeIconOpacity = shifting\n                ? focused.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.6, 1],\n                  })\n                : focused;\n              const activeLabelOpacity = focused;\n              const inactiveIconOpacity = inactiveOpacity;\n              const inactiveLabelOpacity = inactiveOpacity;\n\n              return (\n                <TouchableWithoutFeedback\n                  key={route.key}\n                  onPress={() => this._handleTabPress(index)}\n                >\n                  <Animated.View\n                    style={[styles.item, { transform: [{ translateX }] }]}\n                  >\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        { transform: [{ translateY }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          { opacity: activeIconOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            tintColor: activeColor,\n                          })\n                        ) : (\n                          <Icon\n                            style={styles.icon}\n                            name={(route: Object).icon}\n                            color={activeColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      {shifting ? null : (\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: inactiveIconOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: false,\n                              tintColor: inactiveColor,\n                            })\n                          ) : (\n                            <Icon\n                              style={styles.icon}\n                              name={(route: Object).icon}\n                              color={inactiveColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                      )}\n                    </Animated.View>\n                    <Animated.View\n                      style={[\n                        styles.labelContainer,\n                        {\n                          transform: [{ scale }, { translateY }],\n                        },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[\n                          styles.labelWrapper,\n                          { opacity: activeLabelOpacity },\n                        ]}\n                      >\n                        {renderLabel ? (\n                          renderLabel({\n                            route,\n                            focused: true,\n                            tintColor: activeColor,\n                          })\n                        ) : (\n                          <AnimatedText\n                            style={[\n                              styles.label,\n                              {\n                                color: activeColor,\n                              },\n                            ]}\n                          >\n                            {getLabelText({ route })}\n                          </AnimatedText>\n                        )}\n                      </Animated.View>\n                      {shifting ? null : (\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: inactiveLabelOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: false,\n                              tintColor: inactiveColor,\n                            })\n                          ) : (\n                            <AnimatedText\n                              style={[\n                                styles.label,\n                                {\n                                  color: inactiveColor,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </AnimatedText>\n                          )}\n                        </Animated.View>\n                      )}\n                    </Animated.View>\n                  </Animated.View>\n                </TouchableWithoutFeedback>\n              );\n            })}\n          </SafeAreaView>\n        </AnimatedPaper>\n      </View>\n    );\n  }\n}\n\npolyfill(BottomNavigation);\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    elevation: 8,\n    overflow: 'hidden',\n    alignItems: 'center',\n    paddingHorizontal: MIN_SHIFT_AMOUNT * 2,\n  },\n  items: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n    // Top adding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  labelContainer: {\n    height: 18,\n    marginTop: 2,\n    paddingBottom: 4,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    fontSize: Platform.OS === 'ios' ? 13 : 14,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}