{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-image-header-scroll-view/src/TriggeringView.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nvar TriggeringView = function (_Component) {\n  _inherits(TriggeringView, _Component);\n\n  var _super = _createSuper(TriggeringView);\n\n  function TriggeringView(props) {\n    var _this;\n\n    _classCallCheck(this, TriggeringView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      touched: false,\n      hidden: false\n    };\n\n    _this.onRef = function (ref) {\n      _this.ref = ref;\n    };\n\n    _this.onLayout = function (e) {\n      if (_this.props.onLayout) {\n        _this.props.onLayout(e);\n      }\n\n      if (!_this.ref) {\n        return;\n      }\n\n      var layout = e.nativeEvent.layout;\n      _this.height = layout.height;\n\n      _this.ref.measure(function (x, y, width, height, pageX, pageY) {\n        _this.initialPageY = pageY;\n      });\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.context.scrollPageY) {\n        return;\n      }\n\n      var pageY = _this.initialPageY - event.value;\n\n      _this.triggerEvents(_this.context.scrollPageY, pageY, pageY + _this.height);\n    };\n\n    _this.initialPageY = 0;\n    return _this;\n  }\n\n  _createClass(TriggeringView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.context.scrollY) {\n        return;\n      }\n\n      this.listenerId = this.context.scrollY.addListener(this.onScroll);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      if (!this.context.scrollY) {\n        return;\n      }\n\n      this.context.scrollY.removeListener(this.listenerId);\n      this.listenerId = nextContext.scrollY.addListener(this.onScroll);\n    }\n  }, {\n    key: \"triggerEvents\",\n    value: function triggerEvents(value, top, bottom) {\n      var _this$props = this.props,\n          bottomOffset = _this$props.bottomOffset,\n          topOffset = _this$props.topOffset;\n\n      if (!this.state.touched && value >= top + topOffset) {\n        this.setState({\n          touched: true\n        });\n        this.props.onBeginHidden();\n        this.props.onTouchTop(true);\n      } else if (this.state.touched && value < top + topOffset) {\n        this.setState({\n          touched: false\n        });\n        this.props.onDisplay();\n        this.props.onTouchTop(false);\n      }\n\n      if (!this.state.hidden && value >= bottom + bottomOffset) {\n        this.setState({\n          hidden: true\n        });\n        this.props.onHide();\n        this.props.onTouchBottom(true);\n      } else if (this.state.hidden && value < bottom + bottomOffset) {\n        this.setState({\n          hidden: false\n        });\n        this.props.onBeginDisplayed();\n        this.props.onTouchBottom(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onBeginHidden = _this$props2.onBeginHidden,\n          onHide = _this$props2.onHide,\n          onBeginDisplayed = _this$props2.onBeginDisplayed,\n          onDisplay = _this$props2.onDisplay,\n          onTouchTop = _this$props2.onTouchTop,\n          onTouchBottom = _this$props2.onTouchBottom,\n          viewProps = _objectWithoutProperties(_this$props2, [\"onBeginHidden\", \"onHide\", \"onBeginDisplayed\", \"onDisplay\", \"onTouchTop\", \"onTouchBottom\"]);\n\n      return React.createElement(View, _extends({\n        ref: this.onRef,\n        collapsable: false\n      }, viewProps, {\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return TriggeringView;\n}(Component);\n\nTriggeringView.defaultProps = {\n  onBeginHidden: function onBeginHidden() {},\n  onHide: function onHide() {},\n  onBeginDisplayed: function onBeginDisplayed() {},\n  onDisplay: function onDisplay() {},\n  onTouchTop: function onTouchTop() {},\n  onTouchBottom: function onTouchBottom() {},\n  bottomOffset: 0,\n  topOffset: 0\n};\nTriggeringView.contextTypes = {\n  scrollY: PropTypes.instanceOf(Animated.Value),\n  scrollPageY: PropTypes.number\n};\nexport default TriggeringView;","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-image-header-scroll-view/src/TriggeringView.js"],"names":["React","Component","PropTypes","TriggeringView","props","state","touched","hidden","onRef","ref","onLayout","e","layout","nativeEvent","height","measure","x","y","width","pageX","pageY","initialPageY","onScroll","event","context","scrollPageY","value","triggerEvents","scrollY","listenerId","addListener","nextProps","nextContext","removeListener","top","bottom","bottomOffset","topOffset","setState","onBeginHidden","onTouchTop","onDisplay","onHide","onTouchBottom","onBeginDisplayed","viewProps","children","defaultProps","contextTypes","instanceOf","Animated","Value","number"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;IAqCMC,c;;;;;AA0BJ,0BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,8BAAMA,KAAN;AADwB,UAhB1BC,KAgB0B,GAhBX;AACbC,MAAAA,OAAO,EAAE,KADI;AAEbC,MAAAA,MAAM,EAAE;AAFK,KAgBW;;AAAA,UAoB1BC,KApB0B,GAoBlB,UAACC,GAAD,EAAc;AACpB,YAAKA,GAAL,GAAWA,GAAX;AACD,KAtByB;;AAAA,UAwB1BC,QAxB0B,GAwBf,UAACC,CAAD,EAAU;AACnB,UAAI,MAAKP,KAAL,CAAWM,QAAf,EAAyB;AACvB,cAAKN,KAAL,CAAWM,QAAX,CAAoBC,CAApB;AACD;;AACD,UAAI,CAAC,MAAKF,GAAV,EAAe;AACb;AACD;;AACD,UAAMG,MAAM,GAAGD,CAAC,CAACE,WAAF,CAAcD,MAA7B;AACA,YAAKE,MAAL,GAAcF,MAAM,CAACE,MAArB;;AACA,YAAKL,GAAL,CAASM,OAAT,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcJ,MAAd,EAAsBK,KAAtB,EAA6BC,KAA7B,EAAuC;AACtD,cAAKC,YAAL,GAAoBD,KAApB;AACD,OAFD;AAGD,KApCyB;;AAAA,UAsC1BE,QAtC0B,GAsCf,UAACC,KAAD,EAAc;AACvB,UAAI,CAAC,MAAKC,OAAL,CAAaC,WAAlB,EAA+B;AAC7B;AACD;;AACD,UAAML,KAAK,GAAG,MAAKC,YAAL,GAAoBE,KAAK,CAACG,KAAxC;;AACA,YAAKC,aAAL,CAAmB,MAAKH,OAAL,CAAaC,WAAhC,EAA6CL,KAA7C,EAAoDA,KAAK,GAAG,MAAKN,MAAjE;AACD,KA5CyB;;AAExB,UAAKO,YAAL,GAAoB,CAApB;AAFwB;AAGzB;;;;yCAEoB;AACnB,UAAI,CAAC,KAAKG,OAAL,CAAaI,OAAlB,EAA2B;AACzB;AACD;;AACD,WAAKC,UAAL,GAAkB,KAAKL,OAAL,CAAaI,OAAb,CAAqBE,WAArB,CAAiC,KAAKR,QAAtC,CAAlB;AACD;;;8CAEyBS,S,EAAkBC,W,EAAsB;AAChE,UAAI,CAAC,KAAKR,OAAL,CAAaI,OAAlB,EAA2B;AACzB;AACD;;AACD,WAAKJ,OAAL,CAAaI,OAAb,CAAqBK,cAArB,CAAoC,KAAKJ,UAAzC;AACA,WAAKA,UAAL,GAAkBG,WAAW,CAACJ,OAAZ,CAAoBE,WAApB,CAAgC,KAAKR,QAArC,CAAlB;AACD;;;kCA4BaI,K,EAAeQ,G,EAAaC,M,EAAgB;AAAA,wBACpB,KAAK/B,KADe;AAAA,UAChDgC,YADgD,eAChDA,YADgD;AAAA,UAClCC,SADkC,eAClCA,SADkC;;AAExD,UAAI,CAAC,KAAKhC,KAAL,CAAWC,OAAZ,IAAuBoB,KAAK,IAAIQ,GAAG,GAAGG,SAA1C,EAAqD;AACnD,aAAKC,QAAL,CAAc;AAAEhC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKF,KAAL,CAAWmC,aAAX;AACA,aAAKnC,KAAL,CAAWoC,UAAX,CAAsB,IAAtB;AACD,OAJD,MAIO,IAAI,KAAKnC,KAAL,CAAWC,OAAX,IAAsBoB,KAAK,GAAGQ,GAAG,GAAGG,SAAxC,EAAmD;AACxD,aAAKC,QAAL,CAAc;AAAEhC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,aAAKF,KAAL,CAAWqC,SAAX;AACA,aAAKrC,KAAL,CAAWoC,UAAX,CAAsB,KAAtB;AACD;;AAED,UAAI,CAAC,KAAKnC,KAAL,CAAWE,MAAZ,IAAsBmB,KAAK,IAAIS,MAAM,GAAGC,YAA5C,EAA0D;AACxD,aAAKE,QAAL,CAAc;AAAE/B,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,aAAKH,KAAL,CAAWsC,MAAX;AACA,aAAKtC,KAAL,CAAWuC,aAAX,CAAyB,IAAzB;AACD,OAJD,MAIO,IAAI,KAAKtC,KAAL,CAAWE,MAAX,IAAqBmB,KAAK,GAAGS,MAAM,GAAGC,YAA1C,EAAwD;AAC7D,aAAKE,QAAL,CAAc;AAAE/B,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,aAAKH,KAAL,CAAWwC,gBAAX;AACA,aAAKxC,KAAL,CAAWuC,aAAX,CAAyB,KAAzB;AACD;AACF;;;6BAEQ;AAAA,yBAUH,KAAKvC,KAVF;AAAA,UAGLmC,aAHK,gBAGLA,aAHK;AAAA,UAILG,MAJK,gBAILA,MAJK;AAAA,UAKLE,gBALK,gBAKLA,gBALK;AAAA,UAMLH,SANK,gBAMLA,SANK;AAAA,UAOLD,UAPK,gBAOLA,UAPK;AAAA,UAQLG,aARK,gBAQLA,aARK;AAAA,UASFE,SATE;;AAaP,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAKrC,KAAhB;AAAuB,QAAA,WAAW,EAAE;AAApC,SAA+CqC,SAA/C;AAA0D,QAAA,QAAQ,EAAE,KAAKnC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKN,KAAL,CAAW0C,QADd,CADF;AAKD;;;;EAjH0B7C,S;;AAAvBE,c,CAeG4C,Y,GAA6B;AAClCR,EAAAA,aAAa,EAAE,yBAAM,CAAE,CADW;AAElCG,EAAAA,MAAM,EAAE,kBAAM,CAAE,CAFkB;AAGlCE,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAHQ;AAIlCH,EAAAA,SAAS,EAAE,qBAAM,CAAE,CAJe;AAKlCD,EAAAA,UAAU,EAAE,sBAAM,CAAE,CALc;AAMlCG,EAAAA,aAAa,EAAE,yBAAM,CAAE,CANW;AAOlCP,EAAAA,YAAY,EAAE,CAPoB;AAQlCC,EAAAA,SAAS,EAAE;AARuB,C;AAqGtClC,cAAc,CAAC6C,YAAf,GAA8B;AAC5BpB,EAAAA,OAAO,EAAE1B,SAAS,CAAC+C,UAAV,CAAqBC,QAAQ,CAACC,KAA9B,CADmB;AAE5B1B,EAAAA,WAAW,EAAEvB,SAAS,CAACkD;AAFK,CAA9B;AAKA,eAAejD,cAAf","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Animated } from 'react-native';\n\ntype Props = {\n  onBeginHidden: Function,\n  onHide: Function,\n  onBeginDisplayed: Function,\n  onDisplay: Function,\n  onTouchTop: Function,\n  onTouchBottom: Function,\n  children?: React$Node,\n  onLayout?: Function,\n  bottomOffset?: number,\n  topOffset?: number,\n};\n\ntype DefaultProps = {\n  onBeginHidden: Function,\n  onHide: Function,\n  onBeginDisplayed: Function,\n  onDisplay: Function,\n  onTouchTop: Function,\n  onTouchBottom: Function,\n  bottomOffset: number,\n  topOffset: number,\n};\n\ntype State = {\n  touched: boolean,\n  hidden: boolean,\n};\n\ntype Context = {\n  scrollPageY?: number,\n  scrollY: Animated.Value,\n};\n\nclass TriggeringView extends Component<Props, State> {\n  initialPageY: number;\n  listenerId: string;\n  ref: ?any; // @see https://github.com/facebook/react-native/issues/15955\n  height: number;\n  context: Context;\n\n  onScroll: Function;\n  onRef: Function;\n  onLayout: Function;\n  state: State = {\n    touched: false,\n    hidden: false,\n  };\n\n  static defaultProps: DefaultProps = {\n    onBeginHidden: () => {},\n    onHide: () => {},\n    onBeginDisplayed: () => {},\n    onDisplay: () => {},\n    onTouchTop: () => {},\n    onTouchBottom: () => {},\n    bottomOffset: 0,\n    topOffset: 0,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.initialPageY = 0;\n  }\n\n  componentWillMount() {\n    if (!this.context.scrollY) {\n      return;\n    }\n    this.listenerId = this.context.scrollY.addListener(this.onScroll);\n  }\n\n  componentWillReceiveProps(nextProps: Props, nextContext: Context) {\n    if (!this.context.scrollY) {\n      return;\n    }\n    this.context.scrollY.removeListener(this.listenerId);\n    this.listenerId = nextContext.scrollY.addListener(this.onScroll);\n  }\n\n  onRef = (ref: any) => {\n    this.ref = ref;\n  };\n\n  onLayout = (e: *) => {\n    if (this.props.onLayout) {\n      this.props.onLayout(e);\n    }\n    if (!this.ref) {\n      return;\n    }\n    const layout = e.nativeEvent.layout;\n    this.height = layout.height;\n    this.ref.measure((x, y, width, height, pageX, pageY) => {\n      this.initialPageY = pageY;\n    });\n  };\n\n  onScroll = (event: *) => {\n    if (!this.context.scrollPageY) {\n      return;\n    }\n    const pageY = this.initialPageY - event.value;\n    this.triggerEvents(this.context.scrollPageY, pageY, pageY + this.height);\n  };\n\n  triggerEvents(value: number, top: number, bottom: number) {\n    const { bottomOffset, topOffset } = this.props;\n    if (!this.state.touched && value >= top + topOffset) {\n      this.setState({ touched: true });\n      this.props.onBeginHidden();\n      this.props.onTouchTop(true);\n    } else if (this.state.touched && value < top + topOffset) {\n      this.setState({ touched: false });\n      this.props.onDisplay();\n      this.props.onTouchTop(false);\n    }\n\n    if (!this.state.hidden && value >= bottom + bottomOffset) {\n      this.setState({ hidden: true });\n      this.props.onHide();\n      this.props.onTouchBottom(true);\n    } else if (this.state.hidden && value < bottom + bottomOffset) {\n      this.setState({ hidden: false });\n      this.props.onBeginDisplayed();\n      this.props.onTouchBottom(false);\n    }\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      onBeginHidden,\n      onHide,\n      onBeginDisplayed,\n      onDisplay,\n      onTouchTop,\n      onTouchBottom,\n      ...viewProps\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return (\n      <View ref={this.onRef} collapsable={false} {...viewProps} onLayout={this.onLayout}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nTriggeringView.contextTypes = {\n  scrollY: PropTypes.instanceOf(Animated.Value),\n  scrollPageY: PropTypes.number,\n};\n\nexport default TriggeringView;\n"]},"metadata":{},"sourceType":"module"}