{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-timeline-flatlist/lib/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nvar defaultCircleSize = 16;\nvar defaultCircleColor = \"#007AFF\";\nvar defaultLineWidth = 2;\nvar defaultLineColor = \"#007AFF\";\nvar defaultTimeTextColor = \"black\";\nvar defaultDotColor = \"white\";\nvar defaultInnerCircle = \"none\";\nvar isRtl = I18nManager.isRTL;\n\nvar Timeline = function (_PureComponent) {\n  _inherits(Timeline, _PureComponent);\n\n  var _super = _createSuper(Timeline);\n\n  function Timeline(props, context) {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _super.call(this, props, context);\n    _this._renderItem = _this._renderItem.bind(_assertThisInitialized(_this));\n    _this.renderTime = (_this.props.renderTime ? _this.props.renderTime : _this._renderTime).bind(_assertThisInitialized(_this));\n    _this.renderDetail = (_this.props.renderDetail ? _this.props.renderDetail : _this._renderDetail).bind(_assertThisInitialized(_this));\n    _this.renderCircle = (_this.props.renderCircle ? _this.props.renderCircle : _this._renderCircle).bind(_assertThisInitialized(_this));\n    _this.renderEvent = _this._renderEvent.bind(_assertThisInitialized(_this));\n    _this.state = {\n      data: _this.props.data,\n      x: 0,\n      width: 0\n    };\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, _extends({\n        style: [styles.listview, this.props.listViewStyle],\n        contentContainerStyle: this.props.listViewContainerStyle,\n        data: this.state.data,\n        extraData: this.state,\n        renderItem: this._renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index + \"\";\n        }\n      }, this.props.options, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      })));\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var content = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          content = React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }\n          }, this.renderTime(item, index), this.renderEvent(item, index), this.renderCircle(item, index));\n          break;\n\n        case \"single-column-right\":\n          content = React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }\n          }, this.renderEvent(item, index), this.renderTime(item, index), this.renderCircle(item, index));\n          break;\n\n        case \"two-column\":\n          content = item.position && item.position == \"right\" || !item.position && index % 2 == 0 ? React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }\n          }, this.renderTime(item, index), this.renderEvent(item, index), this.renderCircle(item, index)) : React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }\n          }, this.renderEvent(item, index), this.renderTime(item, index), this.renderCircle(item, index));\n          break;\n      }\n\n      return React.createElement(View, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }\n      }, content);\n    }\n  }, {\n    key: \"_renderTime\",\n    value: function _renderTime(rowData, rowID) {\n      if (!this.props.showTime) {\n        return null;\n      }\n\n      var timeWrapper = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          timeWrapper = {\n            alignItems: \"flex-end\"\n          };\n          break;\n\n        case \"single-column-right\":\n          timeWrapper = {\n            alignItems: \"flex-start\"\n          };\n          break;\n\n        case \"two-column\":\n          timeWrapper = {\n            flex: 1,\n            alignItems: rowData.position && rowData.position == \"right\" || !rowData.position && rowID % 2 == 0 ? \"flex-end\" : \"flex-start\"\n          };\n          break;\n      }\n\n      var isAllowFontScaling = this.props.isAllowFontScaling;\n      return React.createElement(View, {\n        style: timeWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.timeContainer, this.props.timeContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.time, this.props.timeStyle],\n        allowFontScaling: isAllowFontScaling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, rowData.time)));\n    }\n  }, {\n    key: \"_renderEvent\",\n    value: function _renderEvent(rowData, rowID) {\n      var _this2 = this;\n\n      var lineWidth = rowData.lineWidth ? rowData.lineWidth : this.props.lineWidth;\n      var isLast = this.props.renderFullLine ? !this.props.renderFullLine : this.state.data.slice(-1)[0] === rowData;\n      var lineColor = isLast ? \"rgba(0,0,0,0)\" : rowData.lineColor ? rowData.lineColor : this.props.lineColor;\n      var opStyle = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          opStyle = {\n            borderColor: lineColor,\n            borderLeftWidth: lineWidth,\n            borderRightWidth: 0,\n            marginLeft: 20,\n            paddingLeft: 20\n          };\n          break;\n\n        case \"single-column-right\":\n          opStyle = {\n            borderColor: lineColor,\n            borderLeftWidth: 0,\n            borderRightWidth: lineWidth,\n            marginRight: 20,\n            paddingRight: 20\n          };\n          break;\n\n        case \"two-column\":\n          opStyle = rowData.position && rowData.position == \"right\" || !rowData.position && rowID % 2 == 0 ? {\n            borderColor: lineColor,\n            borderLeftWidth: lineWidth,\n            borderRightWidth: 0,\n            marginLeft: 20,\n            paddingLeft: 20\n          } : {\n            borderColor: lineColor,\n            borderLeftWidth: 0,\n            borderRightWidth: lineWidth,\n            marginRight: 20,\n            paddingRight: 20\n          };\n          break;\n      }\n\n      return React.createElement(View, {\n        style: [styles.details, opStyle, this.props.eventContainerStyle, rowData.eventContainerStyle],\n        onLayout: function onLayout(evt) {\n          if (!_this2.state.x && !_this2.state.width) {\n            var _evt$nativeEvent$layo = evt.nativeEvent.layout,\n                x = _evt$nativeEvent$layo.x,\n                width = _evt$nativeEvent$layo.width;\n\n            _this2.setState({\n              x: x,\n              width: width\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: this.props.onEventPress == null,\n        style: [this.props.detailContainerStyle],\n        onPress: function onPress() {\n          return _this2.props.onEventPress ? _this2.props.onEventPress(rowData) : null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, this.renderDetail(rowData, rowID)), this._renderSeparator()));\n    }\n  }, {\n    key: \"_renderDetail\",\n    value: function _renderDetail(rowData, rowID) {\n      var isAllowFontScaling = this.props.isAllowFontScaling;\n      var description;\n\n      if (typeof rowData.description === \"string\") {\n        description = React.createElement(Text, {\n          style: [styles.description, this.props.descriptionStyle, rowData.descriptionStyle],\n          allowFontScaling: isAllowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }\n        }, rowData.description);\n      } else if (typeof rowData.description === \"object\") {\n        description = rowData.description;\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, this.props.titleStyle, rowData.titleStyle],\n        allowFontScaling: isAllowFontScaling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, rowData.title), description);\n    }\n  }, {\n    key: \"_renderCircle\",\n    value: function _renderCircle(rowData, rowID) {\n      var circleSize = rowData.circleSize ? rowData.circleSize : this.props.circleSize ? this.props.circleSize : defaultCircleSize;\n      var circleColor = rowData.circleColor ? rowData.circleColor : this.props.circleColor ? this.props.circleColor : defaultCircleColor;\n      var lineWidth = rowData.lineWidth ? rowData.lineWidth : this.props.lineWidth ? this.props.lineWidth : defaultLineWidth;\n      var circleStyle = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          circleStyle = isRtl ? {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            right: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          } : {\n            width: this.state.x ? circleSize : 0,\n            height: this.state.x ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.x - circleSize / 2 + (lineWidth - 1) / 2\n          };\n          break;\n\n        case \"single-column-right\":\n          circleStyle = {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          };\n          break;\n\n        case \"two-column\":\n          circleStyle = {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          };\n          break;\n      }\n\n      var innerCircle = null;\n\n      switch (this.props.innerCircle) {\n        case \"icon\":\n          var iconDefault = rowData.iconDefault ? rowData.iconDefault : this.props.iconDefault;\n          var iconSource = rowData.icon ? rowData.icon : iconDefault;\n\n          if (React.isValidElement(iconSource)) {\n            innerCircle = iconSource;\n            break;\n          }\n\n          if (rowData.icon) iconSource = rowData.icon.constructor === String ? {\n            uri: rowData.icon\n          } : rowData.icon;\n          var iconStyle = {\n            height: circleSize,\n            width: circleSize\n          };\n          innerCircle = React.createElement(Image, {\n            source: iconSource,\n            defaultSource: typeof iconDefault === \"number\" && iconDefault,\n            style: [iconStyle, this.props.iconStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }\n          });\n          break;\n\n        case \"dot\":\n          var dotSize = this.props.dotSize ? this.props.dotSize : circleSize / 2;\n          var dotStyle = {\n            height: dotSize,\n            width: dotSize,\n            borderRadius: circleSize / 4,\n            backgroundColor: rowData.dotColor ? rowData.dotColor : this.props.dotColor ? this.props.dotColor : defaultDotColor\n          };\n          innerCircle = React.createElement(View, {\n            style: [styles.dot, dotStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 31\n            }\n          });\n          break;\n\n        case \"element\":\n          innerCircle = rowData.icon;\n          break;\n      }\n\n      return React.createElement(View, {\n        style: [styles.circle, circleStyle, this.props.circleStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }, innerCircle);\n    }\n  }, {\n    key: \"_renderSeparator\",\n    value: function _renderSeparator() {\n      if (!this.props.separator) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: [styles.separator, this.props.separatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 16\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.data !== nextProps.data) {\n        return {\n          data: nextProps.data\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Timeline;\n}(PureComponent);\n\nexport { Timeline as default };\nTimeline.defaultProps = {\n  circleSize: defaultCircleSize,\n  circleColor: defaultCircleColor,\n  lineWidth: defaultLineWidth,\n  lineColor: defaultLineColor,\n  innerCircle: defaultInnerCircle,\n  columnFormat: \"single-column-left\",\n  separator: false,\n  showTime: true,\n  isAllowFontScaling: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  listview: {\n    flex: 1\n  },\n  sectionHeader: {\n    marginBottom: 15,\n    backgroundColor: \"#007AFF\",\n    height: 30,\n    justifyContent: \"center\"\n  },\n  sectionHeaderText: {\n    color: \"#FFF\",\n    fontSize: 18,\n    alignSelf: \"center\"\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  timeContainer: {\n    minWidth: 45\n  },\n  time: {\n    textAlign: \"right\",\n    color: defaultTimeTextColor,\n    overflow: \"hidden\"\n  },\n  circle: {\n    width: 16,\n    height: 16,\n    borderRadius: 10,\n    zIndex: 1,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: defaultDotColor\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  details: {\n    borderLeftWidth: defaultLineWidth,\n    flexDirection: \"column\",\n    flex: 1\n  },\n  detail: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  description: {\n    marginTop: 10\n  },\n  separator: {\n    height: 1,\n    backgroundColor: \"#aaa\",\n    marginTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-timeline-flatlist/lib/index.js"],"names":["React","PureComponent","defaultCircleSize","defaultCircleColor","defaultLineWidth","defaultLineColor","defaultTimeTextColor","defaultDotColor","defaultInnerCircle","isRtl","I18nManager","isRTL","Timeline","props","context","_renderItem","bind","renderTime","_renderTime","renderDetail","_renderDetail","renderCircle","_renderCircle","renderEvent","_renderEvent","state","data","x","width","styles","container","style","listview","listViewStyle","listViewContainerStyle","item","index","options","content","columnFormat","rowContainer","rowContainerStyle","position","rowData","rowID","showTime","timeWrapper","alignItems","flex","isAllowFontScaling","timeContainer","timeContainerStyle","time","timeStyle","lineWidth","isLast","renderFullLine","slice","lineColor","opStyle","borderColor","borderLeftWidth","borderRightWidth","marginLeft","paddingLeft","marginRight","paddingRight","details","eventContainerStyle","evt","nativeEvent","layout","setState","onEventPress","detailContainerStyle","detail","_renderSeparator","description","descriptionStyle","title","titleStyle","circleSize","circleColor","circleStyle","height","borderRadius","backgroundColor","right","left","innerCircle","iconDefault","iconSource","icon","isValidElement","constructor","String","uri","iconStyle","dotSize","dotStyle","dotColor","dot","circle","separator","separatorStyle","nextProps","prevState","defaultProps","StyleSheet","create","sectionHeader","marginBottom","justifyContent","sectionHeaderText","color","fontSize","alignSelf","flexDirection","minWidth","textAlign","overflow","zIndex","fontWeight","paddingTop","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { PureComponent } from \"react\";\nimport {\n    StyleSheet,\n    FlatList,\n    Image,\n    View,\n    Text,\n    TouchableOpacity,\n    I18nManager\n} from \"react-native\";\n\nconst defaultCircleSize = 16;\nconst defaultCircleColor = \"#007AFF\";\nconst defaultLineWidth = 2;\nconst defaultLineColor = \"#007AFF\";\nconst defaultTimeTextColor = \"black\";\nconst defaultDotColor = \"white\";\nconst defaultInnerCircle = \"none\";\nconst isRtl = I18nManager.isRTL;\n\nexport default class Timeline extends PureComponent {\n    constructor(props, context) {\n        super(props, context);\n\n        this._renderItem = this._renderItem.bind(this);\n        this.renderTime = (this.props.renderTime\n            ? this.props.renderTime\n            : this._renderTime\n        ).bind(this);\n        this.renderDetail = (this.props.renderDetail\n            ? this.props.renderDetail\n            : this._renderDetail\n        ).bind(this);\n        this.renderCircle = (this.props.renderCircle\n            ? this.props.renderCircle\n            : this._renderCircle\n        ).bind(this);\n        this.renderEvent = this._renderEvent.bind(this);\n\n        this.state = {\n            data: this.props.data,\n            x: 0,\n            width: 0\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.data !== nextProps.data) {\n            return {\n                data: nextProps.data\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        return (\n            <View style={[styles.container, this.props.style]}>\n                <FlatList\n                    style={[styles.listview, this.props.listViewStyle]}\n                    contentContainerStyle={this.props.listViewContainerStyle}\n                    data={this.state.data}\n                    extraData={this.state}\n                    renderItem={this._renderItem}\n                    keyExtractor={(item, index) => index + \"\"}\n                    {...this.props.options}\n                />\n            </View>\n        );\n    }\n\n    _renderItem({ item, index }) {\n        let content = null;\n        switch (this.props.columnFormat) {\n            case \"single-column-left\":\n                content = (\n                    <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n                        {this.renderTime(item, index)}\n                        {this.renderEvent(item, index)}\n                        {this.renderCircle(item, index)}\n                    </View>\n                );\n                break;\n            case \"single-column-right\":\n                content = (\n                    <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n                        {this.renderEvent(item, index)}\n                        {this.renderTime(item, index)}\n                        {this.renderCircle(item, index)}\n                    </View>\n                );\n                break;\n            case \"two-column\":\n                content =\n                    (item.position && item.position == \"right\") ||\n                        (!item.position && index % 2 == 0) ? (\n                            <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n                                {this.renderTime(item, index)}\n                                {this.renderEvent(item, index)}\n                                {this.renderCircle(item, index)}\n                            </View>\n                        ) : (\n                            <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n                                {this.renderEvent(item, index)}\n                                {this.renderTime(item, index)}\n                                {this.renderCircle(item, index)}\n                            </View>\n                        );\n                break;\n        }\n        return <View key={index}>{content}</View>;\n    }\n\n    _renderTime(rowData, rowID) {\n        if (!this.props.showTime) {\n            return null;\n        }\n        var timeWrapper = null;\n        switch (this.props.columnFormat) {\n            case \"single-column-left\":\n                timeWrapper = {\n                    alignItems: \"flex-end\"\n                };\n                break;\n            case \"single-column-right\":\n                timeWrapper = {\n                    alignItems: \"flex-start\"\n                };\n                break;\n            case \"two-column\":\n                timeWrapper = {\n                    flex: 1,\n                    alignItems:\n                        (rowData.position && rowData.position == \"right\") ||\n                            (!rowData.position && rowID % 2 == 0)\n                            ? \"flex-end\"\n                            : \"flex-start\"\n                };\n                break;\n        }\n        const { isAllowFontScaling } = this.props;\n        return (\n            <View style={timeWrapper}>\n                <View style={[styles.timeContainer, this.props.timeContainerStyle]}>\n                    <Text\n                        style={[styles.time, this.props.timeStyle]}\n                        allowFontScaling={isAllowFontScaling}\n                    >\n                        {rowData.time}\n                    </Text>\n                </View>\n            </View>\n        );\n    }\n\n    _renderEvent(rowData, rowID) {\n        const lineWidth = rowData.lineWidth\n            ? rowData.lineWidth\n            : this.props.lineWidth;\n        const isLast = this.props.renderFullLine\n            ? !this.props.renderFullLine\n            : this.state.data.slice(-1)[0] === rowData;\n        const lineColor = isLast\n            ? \"rgba(0,0,0,0)\"\n            : rowData.lineColor\n                ? rowData.lineColor\n                : this.props.lineColor;\n        let opStyle = null;\n\n        switch (this.props.columnFormat) {\n            case \"single-column-left\":\n                opStyle = {\n                    borderColor: lineColor,\n                    borderLeftWidth: lineWidth,\n                    borderRightWidth: 0,\n                    marginLeft: 20,\n                    paddingLeft: 20\n                };\n                break;\n            case \"single-column-right\":\n                opStyle = {\n                    borderColor: lineColor,\n                    borderLeftWidth: 0,\n                    borderRightWidth: lineWidth,\n                    marginRight: 20,\n                    paddingRight: 20\n                };\n                break;\n            case \"two-column\":\n                opStyle =\n                    (rowData.position && rowData.position == \"right\") ||\n                        (!rowData.position && rowID % 2 == 0)\n                        ? {\n                            borderColor: lineColor,\n                            borderLeftWidth: lineWidth,\n                            borderRightWidth: 0,\n                            marginLeft: 20,\n                            paddingLeft: 20\n                        }\n                        : {\n                            borderColor: lineColor,\n                            borderLeftWidth: 0,\n                            borderRightWidth: lineWidth,\n                            marginRight: 20,\n                            paddingRight: 20\n                        };\n                break;\n        }\n\n        return (\n            <View\n                style={[styles.details, opStyle, this.props.eventContainerStyle, rowData.eventContainerStyle]}\n                onLayout={evt => {\n                    if (!this.state.x && !this.state.width) {\n                        const { x, width } = evt.nativeEvent.layout;\n                        this.setState({ x, width });\n                    }\n                }}\n            >\n                <TouchableOpacity\n                    disabled={this.props.onEventPress == null}\n                    style={[this.props.detailContainerStyle]}\n                    onPress={() =>\n                        this.props.onEventPress ? this.props.onEventPress(rowData) : null\n                    }\n                >\n                    <View style={styles.detail}>{this.renderDetail(rowData, rowID)}</View>\n                    {this._renderSeparator()}\n                </TouchableOpacity>\n            </View>\n        );\n    }\n\n    _renderDetail(rowData, rowID) {\n        const { isAllowFontScaling } = this.props;\n        let description;\n        if (typeof rowData.description === \"string\") {\n            description = (\n                <Text\n                    style={[\n                        styles.description,\n                        this.props.descriptionStyle,\n                        rowData.descriptionStyle\n                    ]}\n                    allowFontScaling={isAllowFontScaling}\n                >\n                    {rowData.description}\n                </Text>\n            );\n        } else if (typeof rowData.description === \"object\") {\n            description = rowData.description;\n        }\n\n        return (\n            <View style={styles.container}>\n                <Text\n                    style={[styles.title, this.props.titleStyle, rowData.titleStyle]}\n                    allowFontScaling={isAllowFontScaling}\n                >\n                    {rowData.title}\n                </Text>\n                {description}\n            </View>\n        );\n    }\n\n    _renderCircle(rowData, rowID) {\n        var circleSize = rowData.circleSize\n            ? rowData.circleSize\n            : this.props.circleSize\n                ? this.props.circleSize\n                : defaultCircleSize;\n        var circleColor = rowData.circleColor\n            ? rowData.circleColor\n            : this.props.circleColor\n                ? this.props.circleColor\n                : defaultCircleColor;\n        var lineWidth = rowData.lineWidth\n            ? rowData.lineWidth\n            : this.props.lineWidth\n                ? this.props.lineWidth\n                : defaultLineWidth;\n\n        var circleStyle = null;\n\n        switch (this.props.columnFormat) {\n            case \"single-column-left\":\n                circleStyle = isRtl ? {\n                    width: this.state.width ? circleSize : 0,\n                    height: this.state.width ? circleSize : 0,\n                    borderRadius: circleSize / 2,\n                    backgroundColor: circleColor,\n                    right: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n                } : {\n                        width: this.state.x ? circleSize : 0,\n                        height: this.state.x ? circleSize : 0,\n                        borderRadius: circleSize / 2,\n                        backgroundColor: circleColor,\n                        left: this.state.x - circleSize / 2 + (lineWidth - 1) / 2\n                    };\n                break;\n            case \"single-column-right\":\n                circleStyle = {\n                    width: this.state.width ? circleSize : 0,\n                    height: this.state.width ? circleSize : 0,\n                    borderRadius: circleSize / 2,\n                    backgroundColor: circleColor,\n                    left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n                };\n                break;\n            case \"two-column\":\n                circleStyle = {\n                    width: this.state.width ? circleSize : 0,\n                    height: this.state.width ? circleSize : 0,\n                    borderRadius: circleSize / 2,\n                    backgroundColor: circleColor,\n                    left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n                };\n                break;\n        }\n\n        var innerCircle = null;\n        switch (this.props.innerCircle) {\n            case \"icon\":\n                let iconDefault = rowData.iconDefault\n                    ? rowData.iconDefault\n                    : this.props.iconDefault;\n                let iconSource = rowData.icon ? rowData.icon : iconDefault;\n                if (React.isValidElement(iconSource)) {\n                    innerCircle = iconSource;\n                    break;\n                }\n                if (rowData.icon)\n                    iconSource =\n                        rowData.icon.constructor === String\n                            ? { uri: rowData.icon }\n                            : rowData.icon;\n                let iconStyle = {\n                    height: circleSize,\n                    width: circleSize\n                };\n                innerCircle = (\n                    <Image\n                        source={iconSource}\n                        defaultSource={typeof iconDefault === \"number\" && iconDefault}\n                        style={[iconStyle, this.props.iconStyle]}\n                    />\n                );\n                break;\n            case \"dot\":\n                const dotSize = this.props.dotSize ? this.props.dotSize : (circleSize / 2)\n                let dotStyle = {\n                    height: dotSize,\n                    width: dotSize,\n                    borderRadius: circleSize / 4,\n                    backgroundColor: rowData.dotColor\n                        ? rowData.dotColor\n                        : this.props.dotColor\n                            ? this.props.dotColor\n                            : defaultDotColor\n                };\n                innerCircle = <View style={[styles.dot, dotStyle]} />;\n                break;\n            case \"element\":\n                innerCircle = rowData.icon;\n                break;\n        }\n        return (\n            <View style={[styles.circle, circleStyle, this.props.circleStyle]}>\n                {innerCircle}\n            </View>\n        );\n    }\n\n    _renderSeparator() {\n        if (!this.props.separator) {\n            return null;\n        }\n        return <View style={[styles.separator, this.props.separatorStyle]} />;\n    }\n}\n\nTimeline.defaultProps = {\n    circleSize: defaultCircleSize,\n    circleColor: defaultCircleColor,\n    lineWidth: defaultLineWidth,\n    lineColor: defaultLineColor,\n    innerCircle: defaultInnerCircle,\n    columnFormat: \"single-column-left\",\n    separator: false,\n    showTime: true,\n    isAllowFontScaling: true\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    listview: {\n        flex: 1\n    },\n    sectionHeader: {\n        marginBottom: 15,\n        backgroundColor: \"#007AFF\",\n        height: 30,\n        justifyContent: \"center\"\n    },\n    sectionHeaderText: {\n        color: \"#FFF\",\n        fontSize: 18,\n        alignSelf: \"center\"\n    },\n    rowContainer: {\n        flexDirection: \"row\",\n        flex: 1,\n        justifyContent: \"center\"\n    },\n    timeContainer: {\n        minWidth: 45\n    },\n    time: {\n        textAlign: \"right\",\n        color: defaultTimeTextColor,\n        overflow: \"hidden\"\n    },\n    circle: {\n        width: 16,\n        height: 16,\n        borderRadius: 10,\n        zIndex: 1,\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    dot: {\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        backgroundColor: defaultDotColor\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    details: {\n        borderLeftWidth: defaultLineWidth,\n        flexDirection: \"column\",\n        flex: 1\n    },\n    detail: { paddingTop: 10, paddingBottom: 10 },\n    description: {\n        marginTop: 10\n    },\n    separator: {\n        height: 1,\n        backgroundColor: \"#aaa\",\n        marginTop: 10,\n        marginBottom: 10\n    }\n});"]},"metadata":{},"sourceType":"module"}