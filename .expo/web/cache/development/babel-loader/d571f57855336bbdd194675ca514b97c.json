{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/core/ThemeProvider.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport createReactContext from 'create-react-context';\nimport DefaultTheme from \"../styles/DefaultTheme\";\nexport var ThemeContext = createReactContext(DefaultTheme);\n\nvar ThemeProvider = function (_React$Component) {\n  _inherits(ThemeProvider, _React$Component);\n\n  var _super = _createSuper(ThemeProvider);\n\n  function ThemeProvider() {\n    _classCallCheck(this, ThemeProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ThemeProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ThemeContext.Provider, {\n        value: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return ThemeProvider;\n}(React.Component);\n\nThemeProvider.defaultProps = {\n  theme: DefaultTheme\n};\nexport { ThemeProvider as default };","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/core/ThemeProvider.js"],"names":["React","createReactContext","DefaultTheme","ThemeContext","ThemeProvider","props","theme","children","Component","defaultProps"],"mappings":";;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,kBAAP,MAAiD,sBAAjD;AACA,OAAOC,YAAP;AAQA,OAAO,IAAMC,YAA4B,GAAGF,kBAAkB,CAACC,YAAD,CAAvD;;IAEcE,a;;;;;;;;;;;;;6BAKV;AACP,aACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,QADd,CADF;AAKD;;;;EAXwCP,KAAK,CAACQ,S;;AAA5BJ,a,CACZK,Y,GAAe;AACpBH,EAAAA,KAAK,EAAEJ;AADa,C;SADHE,a","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport createReactContext, { type Context } from 'create-react-context';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport type { Theme } from '../types';\n\ntype Props = {\n  children: React.Node,\n  theme: Theme,\n};\n\nexport const ThemeContext: Context<Theme> = createReactContext(DefaultTheme);\n\nexport default class ThemeProvider extends React.Component<Props> {\n  static defaultProps = {\n    theme: DefaultTheme,\n  };\n\n  render() {\n    return (\n      <ThemeContext.Provider value={this.props.theme}>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}