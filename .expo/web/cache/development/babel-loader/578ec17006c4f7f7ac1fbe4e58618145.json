{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/Typography/Text.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport withTheme from \"../../core/withTheme\";\n\nvar Text = function (_React$Component) {\n  _inherits(Text, _React$Component);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Text, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps() {\n      var _this$_root;\n\n      return (_this$_root = this._root).setNativeProps.apply(_this$_root, arguments);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      return React.createElement(NativeText, _extends({}, this.props, {\n        ref: function ref(c) {\n          _this._root = c;\n        },\n        style: [{\n          fontFamily: theme.fonts.regular,\n          color: theme.colors.text\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Text;\n}(React.Component);\n\nexport default withTheme(Text);","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/Typography/Text.js"],"names":["React","withTheme","Text","_root","setNativeProps","props","style","theme","c","fontFamily","fonts","regular","color","colors","text","Component"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,SAAP;;IAgBMC,I;;;;;;;;;;;;;qCAGoB;AAAA;;AACtB,aAAO,oBAAKC,KAAL,EAAWC,cAAX,8BAAP;AACD;;;6BAEQ;AAAA;;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAGP,aACE,oBAAC,UAAD,eACM,KAAKF,KADX;AAEE,QAAA,GAAG,EAAE,aAAAG,CAAC,EAAI;AACR,UAAA,KAAI,CAACL,KAAL,GAAaK,CAAb;AACD,SAJH;AAKE,QAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,UAAU,EAAEF,KAAK,CAACG,KAAN,CAAYC,OAA1B;AAAmCC,UAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaC;AAAvD,SADK,EAELR,KAFK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;;;;EAtBgBN,KAAK,CAACe,S;;AAyBzB,eAAed,SAAS,CAACC,IAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Text as NativeText } from 'react-native';\nimport withTheme from '../../core/withTheme';\nimport type { Theme } from '../../types';\n\ntype Props = {\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nclass Text extends React.Component<Props> {\n  _root: NativeText;\n\n  setNativeProps(...args) {\n    return this._root.setNativeProps(...args);\n  }\n\n  render() {\n    const { style, theme } = this.props;\n\n    return (\n      <NativeText\n        {...this.props}\n        ref={c => {\n          this._root = c;\n        }}\n        style={[\n          { fontFamily: theme.fonts.regular, color: theme.colors.text },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nexport default withTheme(Text);\n"]},"metadata":{},"sourceType":"module"}