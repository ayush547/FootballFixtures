{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/Icon.js\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar MaterialIcons;\n\ntry {\n  MaterialIcons = require(\"@expo/vector-icons/MaterialIcons\").default;\n} catch (e) {\n  MaterialIcons = function MaterialIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        style = _ref.style,\n        rest = _objectWithoutProperties(_ref, [\"name\", \"color\", \"size\", \"style\"]);\n\n    console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons' is not installed. To remove this warning, install 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n    return React.createElement(Text, _extends({}, rest, {\n      style: [{\n        color: color,\n        fontSize: size\n      }, style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }), \"\\u25A1\");\n  };\n}\n\nvar Icon = function Icon(_ref2) {\n  var name = _ref2.name,\n      color = _ref2.color,\n      size = _ref2.size,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, [\"name\", \"color\", \"size\", \"style\"]);\n\n  if (typeof name === 'string') {\n    return React.createElement(MaterialIcons, _extends({}, rest, {\n      name: name,\n      color: color,\n      size: size,\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }));\n  } else if (typeof name === 'object' && name !== null && Object.prototype.hasOwnProperty.call(name, 'uri') && typeof name.uri === 'string' || typeof name === 'number') {\n    return React.createElement(Image, _extends({}, rest, {\n      source: name,\n      style: [{\n        width: size,\n        height: size,\n        tintColor: color\n      }, style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(View, _extends({}, rest, {\n    style: [{\n      width: size,\n      height: size\n    }, styles.container, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), name);\n};\n\nexport default Icon;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["/home/narensairam/Desktop/react-native/fixtures/node_modules/react-native-paper/src/components/Icon.js"],"names":["React","MaterialIcons","require","default","e","name","color","size","style","rest","console","warn","fontSize","Icon","Object","prototype","hasOwnProperty","call","uri","width","height","tintColor","styles","container","StyleSheet","create","alignItems","justifyContent","overflow"],"mappings":";;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAGA,IAAIC,aAAJ;;AAEA,IAAI;AAEFA,EAAAA,aAAa,GAAGC,OAAO,oCAAP,CAAmDC,OAAnE;AACD,CAHD,CAGE,OAAOC,CAAP,EAAU;AACVH,EAAAA,aAAa,GAAG,6BAA2C;AAAA,QAAxCI,IAAwC,QAAxCA,IAAwC;AAAA,QAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,QAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAXC,IAAW;;AAEzDC,IAAAA,OAAO,CAACC,IAAR,6BAC4BN,IAD5B;AAIA,WACE,oBAAC,IAAD,eAAUI,IAAV;AAAgB,MAAA,KAAK,EAAE,CAAC;AAAEH,QAAAA,KAAK,EAALA,KAAF;AAASM,QAAAA,QAAQ,EAAEL;AAAnB,OAAD,EAA4BC,KAA5B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD,GAXD;AAYD;;AAWD,IAAMK,IAAI,GAAG,SAAPA,IAAO,QAAkD;AAAA,MAA/CR,IAA+C,SAA/CA,IAA+C;AAAA,MAAzCC,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCC,IAAkC,SAAlCA,IAAkC;AAAA,MAA5BC,KAA4B,SAA5BA,KAA4B;AAAA,MAAlBC,IAAkB;;AAC7D,MAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WACE,oBAAC,aAAD,eACMI,IADN;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,KAAK,EAAEC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAVD,MAUO,IACJ,OAAOH,IAAP,KAAgB,QAAhB,IACCA,IAAI,KAAK,IADV,IAEES,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,IAArC,EAA2C,KAA3C,KACC,OAAOA,IAAI,CAACa,GAAZ,KAAoB,QAHxB,IAIA,OAAOb,IAAP,KAAgB,QALX,EAML;AACA,WACE,oBAAC,KAAD,eACMI,IADN;AAEE,MAAA,MAAM,EAAEJ,IAFV;AAGE,MAAA,KAAK,EAAE,CACL;AACEc,QAAAA,KAAK,EAAEZ,IADT;AAEEa,QAAAA,MAAM,EAAEb,IAFV;AAGEc,QAAAA,SAAS,EAAEf;AAHb,OADK,EAMLE,KANK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAcD;;AACD,SACE,oBAAC,IAAD,eACMC,IADN;AAEE,IAAA,KAAK,EAAE,CACL;AACEU,MAAAA,KAAK,EAAEZ,IADT;AAEEa,MAAAA,MAAM,EAAEb;AAFV,KADK,EAKLe,MAAM,CAACC,SALF,EAMLf,KANK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWIH,IAXJ,CADF;AAeD,CAhDD;;AAkDA,eAAeQ,IAAf;AAEA,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,QAAQ,EAAE;AAHD;AADoB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Image, Text, View, StyleSheet } from 'react-native';\n\nlet MaterialIcons;\n\ntry {\n  // Optionally require vector-icons\n  MaterialIcons = require('react-native-vector-icons/MaterialIcons').default;\n} catch (e) {\n  MaterialIcons = ({ name, color, size, style, ...rest }) => {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons' is not installed. To remove this warning, install 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n    );\n\n    return (\n      <Text {...rest} style={[{ color, fontSize: size }, style]}>\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport type IconSource = string | { uri: string } | number | React.Node;\n\nexport type Props = {\n  name: IconSource,\n  color: string,\n  size?: number,\n  style?: any,\n};\n\nconst Icon = ({ name, color, size, style, ...rest }: Props) => {\n  if (typeof name === 'string') {\n    return (\n      <MaterialIcons\n        {...rest}\n        name={name}\n        color={color}\n        size={size}\n        style={style}\n      />\n    );\n  } else if (\n    (typeof name === 'object' &&\n      name !== null &&\n      (Object.prototype.hasOwnProperty.call(name, 'uri') &&\n        typeof name.uri === 'string')) ||\n    typeof name === 'number'\n  ) {\n    return (\n      <Image\n        {...rest}\n        source={name}\n        style={[\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n  return (\n    <View\n      {...rest}\n      style={[\n        {\n          width: size,\n          height: size,\n        },\n        styles.container,\n        style,\n      ]}\n    >\n      {(name: any)}\n    </View>\n  );\n};\n\nexport default Icon;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}